---
- name: Build & Deploy Docker Container
  hosts: all
  become: true
  gather_facts: false

  tasks:
    - name: Pull Docker Image
      docker_image:
        name: "{{ DOCKER_IMAGE }}:{{ BUILD_NUMBER }}"
        source: pull

    - name: Run Docker Container
      docker_container:
        name: my_container
        image: "{{ DOCKER_IMAGE }}:{{ BUILD_NUMBER }}"
        state: started
        ports:
          - "8079:8080"
          
    - name: Gather Docker container facts
      docker_container:
        name: my_container
      register: container_facts

    - name: Print container facts
      debug:
        var: container_facts.containers

- name: Install Prometheus
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Add Prometheus repository
      apt_repository:
        repo: deb https://packages.grafana.com/oss/deb stable main
        state: present
        filename: prometheus
      become: true

    - name: Add Prometheus repository
      apt_repository:
        repo: deb https://packages.grafana.com/oss/deb stable main
        state: present

    - name: Update apt packages
      apt:
        update_cache: yes

    - name: Install Prometheus
      apt:
        name: prometheus
        state: present

    - name: Configure Prometheus
      hosts: localhost
      gather_facts: false
      tasks:
        - name: Add Node Exporter target to Prometheus configuration
          lineinfile:
            path: /etc/prometheus/prometheus.yml
            line: "  - targets: ['localhost:9100']"
          notify: Restart Prometheus

      handlers:
        - name: Restart Prometheus
          systemd:
            name: prometheus
            state: restarted


- name: Apply Kubernetes manifest files #Ansible invoking the manifest files
  hosts: localhost
  vars:
    kube_ns:  |
      apiVersion: v1
      kind: Namespace
      metadata:
        name: abc1-clusters
    #kube_pod: |
    #  apiVersion: v1
    #  kind: Pod
    #  metadata:
    #    name: my-container-pod
    #    namespace: abc1-clusters
    #  spec:
    #    containers:
    #    - name: my-container
    #      image: "{{ DOCKER_IMAGE }}:{{ BUILD_NUMBER }}"
    #      ports:
    #      - containerPort: 8080

    kube_service: |
      apiVersion: v1
      kind: Service
      metadata:
        name: my-container-service
        namespace: abc1-clusters #Build #120 names Namespace is required for apps/v1.Deployment
      spec:
        selector:
          app: my_container
        ports:
          - protocol: TCP
            port: 80 #testing
            targetPort: 8079

    kube_deployment: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: my-container-deployment
        namespace: abc1-clusters
        labels: 
          app: my-container
      spec:
        replicas: 3
        selector:
          matchLabels:
            app: my-container
        template:
          metadata:
            labels:
              app: my-container
          spec:
            containers:
            - name: my-container
              image: "{{ DOCKER_IMAGE }}:{{ BUILD_NUMBER }}"
              ports:
              - containerPort: 8080
  tasks:
    - name: Apply Kubernetes manifest files
      k8s:
        state: present
        definition: "{{ item }}"
      with_items:
        - "{{ kube_ns }}"
      #  - "{{ kube_pod }}"
        - "{{ kube_service }}"
        - "{{ kube_deployment }}"

#    - name: Wait for service to be available
#      uri:
#        url: "http://34.170.55.162:80"
#        return_content: yes
#      register: result
#      until: result.status == 200
#      retries: 10
#      delay: 5
#
#    - name: Display result
#      debug:
#        var: result.content
